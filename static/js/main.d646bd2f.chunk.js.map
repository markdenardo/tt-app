{"version":3,"sources":["containers/Carousel.js","reducers/movieReducer.js","components/NavBar.js","components/HomeText.js","actions/movieActions.js","containers/RandomMovie.js","components/Home.js","components/Trailers.js","containers/MovieForm.js","containers/MovieNames.js","components/Movies.js","containers/App.js","index.js"],"names":["dispatch","movieReducer","state","movies","movie","loading","action","type","id","name","url","dir","year","NavBar","className","AppBar","to","process","HomeText","getMovies","fetch","then","r","json","error","console","log","RandomMovie","getCurrentMovie","props","length","randomNumber","getRandomInt","addRandomMovie","handleClick","this","min","max","Math","ceil","floor","random","Card","onClick","React","Component","connect","Home","Carousel","handleLoading","map","Trailers","MovieForm","handleChange","event","setState","target","value","handleOnSubmit","preventDefault","method","headers","body","JSON","stringify","addMovie","classname","onSubmit","TextField","placeholder","onChange","onClicked","MovieNames","key","href","mapDispatchToProps","Movies","App","exact","path","component","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d646bd2f.chunk.js","sourcesContent":["import React from 'react';\nimport { getMovies } from '../actions/movieActions'\nimport { connect } from 'react-redux'\nimport ReactPlayer from 'react-player'\nimport Card from '@material-ui/core/Card';\n\nclass Carousel extends React.Component {\n\n    componentDidMount() {\n        this.props.getMovies()\n    };\n\n    handleLoading = () => {\n        console.log(this.props)\n        if (this.props.loading === true) {\n            return <div>Loading...</div>\n        }\n        else if (this.props.loading !== true) {\n            return this.props.movies.map(movie => <div>{movie.name}\n                <Card className=\"card\"><ReactPlayer url={movie.url} /></Card>\n                </div>)\n        }\n    };\n\n    render() { \n        return (\n            <div className=\"carousel-container\">\n                {this.handleLoading()}\n            </div>\n        )\n    };\n\n};\n\nconst mapStateToProps = state => {\n    return ({\n        movies: state.movies\n    })\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getMovies: () => dispatch(getMovies)\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps(getMovies))(Carousel);\n\n\n","const movieReducer = (state = {movies: [], movie: {},loading: false }, action) => {\n    \n    switch(action.type) {\n        \n        case 'GET_MOVIES':\n            return {\n                ...state,\n                movies: action.movies,\n                loading: false\n            }\n            \n            case 'ADD_MOVIE':\n                // debugger;\n                const movie = {\n                    id: action.movie.id,\n                    name: action.movie.name,\n                    url: action.movie.url,\n                    dir: action.movie.dir, \n                    year: action.movie.year\n                };\n                return {\n                    ...state,\n                    movies: [...state.movies, movie],\n                    loading: false\n                };\n    \n            case 'RAND_MOVIE':\n                return {\n                    ...state,\n                    movie: action.movie,\n                }\n\n            default:\n                return state;\n        };\n\n    \n};\n\nexport default movieReducer;\n\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\n\nimport { NavLink } from 'react-router-dom';\n\nconst NavBar = () => {\n    return(\n        <div  className=\"navbar-component\">\n            <AppBar>\n                <a><NavLink to={process.env.PUBLIC_URL + '/'}>Home</NavLink></a>\n                <a><NavLink to={process.env.PUBLIC_URL + '/trailers'}>Trailers</NavLink></a>\n                <a><NavLink to={process.env.PUBLIC_URL + '/movies'}>Movies</NavLink></a>\n            </AppBar>\n        </div>\n    )\n}\n\nexport default NavBar;\n\n\n    \n","import React from 'react'\n\nconst HomeText = () => {\n    return(\n        <div className=\"hometext-component\">\n            \n            <h1>\n                Top Trailers\n            </h1>\n                    <h2>\n                        Welcome to the home page; here is a random movie from the API.\n                    </h2>\n        </div>\n    )\n}\n\n export default HomeText;","\nexport const addRandomMovie = movie => {\n    return {\n        type: 'RAND_MOVIE',\n        movie\n    }\n}\n\nexport const getMovies = () => {\n    try {\n        return dispatch => {\n            // dispatch(loadingTrue())\n            return fetch('https://web-brut-api.herokuapp.com/movies')\n                .then(r => r.json())\n                // .then(movies => dispatch(setMovies(movies), dispatch(loadingFalse())))\n                .then(movies => dispatch({type: 'GET_MOVIES', movies: movies}))\n                .then()\n        }\n    }\n     catch(error) {\n        console.log(error);\n    }\n}\n\nexport const addMovie = (movie) => {\n    return dispatch => {\n        return fetch('https://web-brut-api.herokuapp.com/movies', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify(movie)\n        })\n            .then(r => r.json())\n            .then(movie => dispatch({ type: 'ADD_MOVIE', movie }))\n        // .then(movie => console.log(movie))\n    }\n};\n\n\n\n","import React from 'react'\nimport ReactPlayer from 'react-player'\nimport { connect } from 'react-redux'\nimport { getMovies, addRandomMovie } from '../actions/movieActions'\nimport Card from '@material-ui/core/Card'\nimport PropTypes from 'prop-types';\n\nclass RandomMovie extends React.Component {\n\n    componentDidMount() {\n        this.props.getMovies()\n\n    };\n\n    getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    getCurrentMovie = () => {\n        // console.log(\"clicked\")\n        if (this.props.movies.length > 0) {\n            let randomNumber = this.getRandomInt(0, this.props.movies.length);\n            let movie = this.props.movies[randomNumber]\n            this.props.addRandomMovie(movie)\n            return movie;\n        }\n        return \"\";\n    }\n\n    handleClick = () => {\n        console.log(\"clicked\")\n        return this.getCurrentMovie()\n    }\n \n    render() {\n        \n            return ( \n                    <div className=\"randommovie-container\">\n                        <ul>\n                        <Card className=\"card\"><ReactPlayer url={this.getCurrentMovie().url}/></Card><br></br>\n                        <button onClick={this.handleClick}>Load Random Movie</button> \n                        </ul>\n                    </div>\n            )\n        }\n        // }\n\n};\n\nRandomMovie.propTypes = {\n    dispatch: PropTypes.func.isRequired\n\n}\n\nconst mapStateToProps = state => {\n    return ({\n        movies: state.movies,\n        movie: state.movie\n    })\n};\n\nexport default connect(mapStateToProps, {getMovies, addRandomMovie})(RandomMovie);","import React from 'react'\nimport HomeText from './HomeText'\nimport RandomMovie from '../containers/RandomMovie'\n\n const Home = () => {\n    return (\n            <div className=\"home-component\">   \n            <HomeText />                   \n            <RandomMovie />\n            </div>\n    )\n};\n\n\n\nexport default Home;","import React from 'react'\nimport Carousel from '../containers/Carousel'\n// import Carousel from './Carousel'\n\nconst Trailers = () => {\n    return (\n        <div className=\"trailers\">\n            <h1>\n                <Carousel />\n            </h1>\n        </div>\n        )\n    }\n\nexport default Trailers\n\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\nimport { addMovie } from '../actions/movieActions'\nimport TextField from '@material-ui/core/TextField';\n\nclass MovieForm extends Component {\n\n  constructor(props) {\n        super(props);\n        this.state = {\n           movie: {\n               name: '', \n               url: '', \n               dir: '', \n               year: ''\n           } \n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleOnSubmit = (event) => {\n        if (event) {\n\n            event.preventDefault();\n\n            let movieReset={\n                name: '',\n                url: '',\n                dir: '',\n                year: ''\n            }\n\n            let movie = {\n                name: this.state.name,\n                url: this.state.url,\n                dir: this.state.dir,\n                year: this.state.year\n            };\n            this.props.dispatch(addMovie(movie))\n            this.setState({movie: movieReset});\n        } else { \n            return; }\n    }\n\n    render() {\n        return (\n            <div className=\"movieform-container\">\n                <form classname=\"movieform-form\" onSubmit={this.handleOnSubmit}>\n                    \n                    <TextField\n                        type='text'\n                        name='name'\n                        placeholder='Movie'\n                        value={this.state.name}\n                        onChange={event => this.handleChange(event)} />\n                    \n                    <TextField\n                        type='url'\n                        name='url'\n                        placeholder='YouTube'\n                        value={this.state.url}\n                        onChange={event => this.handleChange(event)} />\n                    \n                    <TextField\n                        type='text'\n                        name='dir'\n                        placeholder='Director'\n                        value={this.state.dir}\n                        onChange={event => this.handleChange(event)}/>\n                    \n                    <TextField\n                        type='text'\n                        name='year'\n                        placeholder='Year'\n                        value={this.state.year}\n                        onChange={event => this.handleChange(event)} />\n                    \n                    <input onClicked={this.handleOnSubmit()} type=\"submit\" value=\"Submit\"/>\n                </form>\n            </div>\n        )\n    }\n}\n\nMovieForm.propTypes = {\n    dispatch: PropTypes.func.isRequired\n    \n}\n\nconst mapStateToProps = state => {\n    return ({\n        movies: state.movies\n    })\n};\n\nexport default connect(mapStateToProps)(MovieForm);\n","import React from 'react';\nimport { getMovies } from '../actions/movieActions'\nimport { connect } from 'react-redux'\n// import { styled } from '@material-ui/core/styles';\n\n\nclass MovieNames extends React.Component {\n\n    componentDidMount() {\n        this.props.getMovies()\n    };\n\n    handleLoading = () => {\n        console.log(this.props)\n        if (this.props.loading === true) {\n            return <div>Loading...</div>\n        }\n        else if (this.props.loading !== true) {\n            return this.props.movies.map(movie => \n                <div className=\"movielist\">\n                    <h2>\n                    <div key={movie.id}><ul><a href={movie.url} target=\"_blank\">\"{movie.name}\" {movie.dir} {movie.year}</a></ul></div>\n                    </h2>\n                </div>\n                )\n        }\n    };\n\n    render() { \n        return (\n            <div>\n                {this.handleLoading()}\n            </div>\n        )\n    };\n\n};\n\nconst mapStateToProps = state => {\n    return ({\n        movies: state.movies\n    })\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getMovies: () => dispatch(getMovies)\n    }\n};\n\n    export default connect(mapStateToProps, mapDispatchToProps(getMovies))(MovieNames);\n\n","import React from 'react'\nimport MovieForm from '../containers/MovieForm'\nimport MovieNames from '../containers/MovieNames'\n\nfunction Movies() {\n        return (\n            <div className=\"movies-component\">\n                <h1>\n                    🎥 Add a YouTube Trailer from your Favorite Movie 🎥\n                    </h1>\n                <MovieForm/>\n                <h1>List of Movies</h1>\n                <MovieNames/>\n            </div>\n        );\n};\n\nexport default Movies;","import React from 'react';\r\nimport './App.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route\r\n} from 'react-router-dom';\r\n\r\nimport NavBar from '../components/NavBar'\r\nimport Home from '../components/Home'\r\nimport Trailers from '../components/Trailers'\r\nimport Movies from '../components/Movies'\r\n\r\nfunction App () {\r\n  return (\r\n    <Router>\r\n    <div className=\"App\">\r\n      <header className=\"app-header\">\r\n      <NavBar />\r\n          <Route exact path={process.env.PUBLIC_URL + '/'} component={Home} />\r\n          <Route exact path={process.env.PUBLIC_URL + '/trailers'} component={Trailers} />\r\n          <Route exact path={process.env.PUBLIC_URL + '/movies'} component={Movies} />\r\n      </header>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport movieReducer from './reducers/movieReducer';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport App from './containers/App';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(movieReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}